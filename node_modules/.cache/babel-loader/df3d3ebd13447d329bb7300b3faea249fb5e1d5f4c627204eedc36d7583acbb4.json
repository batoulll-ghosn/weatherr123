{"ast":null,"code":"var _jsxFileName = \"/Users/lesliesaliba/Desktop/weather_11_11/weatherr123/src/WeatherForecast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport cloudy from './weather-icons/cloudy.svg';\nimport clear from './weather-icons/clear.svg';\nimport rain from './weather-icons/rain.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = ({\n  currentWeather,\n  cityName\n}) => {\n  _s();\n  const [humidityValue, setHumidity] = useState(null);\n  const [windValue, setWind] = useState(null);\n  const [currentTemperature, setCurrentTemperature] = useState('');\n  const [activeTab, setActiveTab] = useState('temperature');\n  const [value, setValue] = useState('');\n  const apiKey = \"5b6af831ac48b7b26262ac5fe047fbd4\";\n\n  // Fetch data when the component mounts or when the cityName prop changes\n  useEffect(() => {\n    fetchWeatherData();\n  }, [cityName]);\n  const fetchWeatherData = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`).then(response => response.json()).then(data => {\n      console.log(data);\n      const humidityValue = data && data.list[0].main.humidity;\n      const windValue = data.list[0].wind.speed * 10;\n      const temperatureValue = Math.round(data.list[0].main.temp - 273.15) + \" °C\";\n      setHumidity(humidityValue + \" %\");\n      setWind(windValue + \" km/h\");\n      setCurrentTemperature(temperatureValue);\n      setValue(temperatureValue);\n    });\n  };\n  const getWeatherIcon = weatherMain => {\n    switch (weatherMain) {\n      case 'Clouds':\n        return cloudy;\n      case 'Clear':\n        return clear;\n      case 'Rain':\n        return rain;\n      default:\n        return cloudy;\n    }\n  };\n  const handleTemperatureClick = () => {\n    setValue(currentTemperature);\n    setActiveTab('temperature');\n  };\n  const handleHumidityClick = () => {\n    setValue(humidityValue);\n    setActiveTab('humidity');\n  };\n  const handleWindClick = () => {\n    setValue(windValue);\n    setActiveTab('wind');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(currentWeather.list[0].dt * 1000).toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"condition\",\n        style: {\n          textTransform: 'capitalize'\n        },\n        children: currentWeather.list[0].weather.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"icon-condition\",\n        src: getWeatherIcon(currentWeather.weather[0].main)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-temperature\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"properties\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `temperature ${activeTab === 'temperature' ? 'active' : ''}`,\n        onClick: handleTemperatureClick,\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `humidity ${activeTab === 'humidity' ? 'active' : ''}`,\n        onClick: handleHumidityClick,\n        children: \"Humidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `wind ${activeTab === 'wind' ? 'active' : ''}`,\n        onClick: handleWindClick,\n        children: \"Wind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherForecast, \"/Np0xMa/NpnqnuLk2lkH6k8im+Q=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","cloudy","clear","rain","jsxDEV","_jsxDEV","WeatherForecast","currentWeather","cityName","_s","humidityValue","setHumidity","windValue","setWind","currentTemperature","setCurrentTemperature","activeTab","setActiveTab","value","setValue","apiKey","fetchWeatherData","fetch","then","response","json","data","console","log","list","main","humidity","wind","speed","temperatureValue","Math","round","temp","getWeatherIcon","weatherMain","handleTemperatureClick","handleHumidityClick","handleWindClick","className","children","Date","dt","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","style","textTransform","weather","description","alt","src","id","onClick","_c","$RefreshReg$"],"sources":["/Users/lesliesaliba/Desktop/weather_11_11/weatherr123/src/WeatherForecast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cloudy from './weather-icons/cloudy.svg';\nimport clear from './weather-icons/clear.svg';\nimport rain from './weather-icons/rain.svg';\n\nconst WeatherForecast = ({ currentWeather, cityName }) => {\n    const [humidityValue, setHumidity] = useState(null);\n    const [windValue, setWind] = useState(null);\n    const [currentTemperature, setCurrentTemperature] = useState('');\n    const [activeTab, setActiveTab] = useState('temperature');\n    const [value, setValue] = useState('');\n    const apiKey = \"5b6af831ac48b7b26262ac5fe047fbd4\";\n\n    // Fetch data when the component mounts or when the cityName prop changes\n    useEffect(() => {\n        fetchWeatherData();\n    }, [cityName]);\n\n    const fetchWeatherData = () => {\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n                const humidityValue = data && data.list[0].main.humidity;\n                const windValue = (data.list[0].wind.speed) * 10;\n                const temperatureValue = Math.round(data.list[0].main.temp - 273.15) + \" °C\";\n\n                setHumidity(humidityValue + \" %\");\n                setWind(windValue + \" km/h\");\n                setCurrentTemperature(temperatureValue);\n                setValue(temperatureValue);\n            });\n    };\n\n    const getWeatherIcon = (weatherMain) => {\n        switch (weatherMain) {\n            case 'Clouds':\n                return cloudy;\n            case 'Clear':\n                return clear;\n            case 'Rain':\n                return rain;\n            default:\n                return cloudy;\n        }\n    };\n\n    const handleTemperatureClick = () => {\n        setValue(currentTemperature);\n        setActiveTab('temperature');\n    };\n\n    const handleHumidityClick = () => {\n        setValue(humidityValue);\n        setActiveTab('humidity');\n    };\n\n    const handleWindClick = () => {\n        setValue(windValue);\n        setActiveTab('wind');\n    };\n\n    return (\n        <div className=\"forecast-details\">\n            <p><span className=\"date\">{new Date(currentWeather.list[0].dt * 1000).toDateString()}</span></p>\n            <div className=\"current-weather\">\n                <p className=\"condition\" style={{ textTransform: 'capitalize' }}>{currentWeather.list[0].weather.description}</p>\n                <img alt=\"icon-condition\" src={getWeatherIcon(currentWeather.weather[0].main)} />\n                <p className=\"current-temperature\">{value}</p>\n            </div>\n            <div id=\"properties\">\n                <span className={`temperature ${activeTab === 'temperature' ? 'active' : ''}`} onClick={handleTemperatureClick}>Temperature</span>\n                <span className={`humidity ${activeTab === 'humidity' ? 'active' : ''}`} onClick={handleHumidityClick}>Humidity</span>\n                <span className={`wind ${activeTab === 'wind' ? 'active' : ''}`} onClick={handleWindClick}>Wind</span>\n            </div>\n        </div>\n    );\n};\n\nexport default WeatherForecast;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}