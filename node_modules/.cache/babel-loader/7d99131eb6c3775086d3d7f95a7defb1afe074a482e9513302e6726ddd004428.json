{"ast":null,"code":"var _jsxFileName = \"/Users/lesliesaliba/Desktop/weather_11_11/weatherr123/src/WeatherForecast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport cloudy from './weather-icons/cloudy.svg';\nimport clear from './weather-icons/clear.svg';\nimport rain from './weather-icons/rain.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = ({\n  currentWeather,\n  cityName\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('temperature');\n  const [value, setValue] = useState('');\n\n  // Initialize variables for humidity, wind, and temperature\n  let humidityValue = \"\";\n  let windValue = \"\";\n  let temperatureValue = \"\";\n  const getWeatherIcon = weatherMain => {\n    switch (weatherMain) {\n      case 'Clouds':\n        return cloudy;\n      case 'Clear':\n        return clear;\n      case 'Rain':\n        return rain;\n      default:\n        return cloudy;\n    }\n  };\n  const handleTemperatureClick = () => {\n    setValue(temperatureValue);\n    setActiveTab('temperature');\n  };\n  const handleHumidityClick = () => {\n    setValue(humidityValue);\n    setActiveTab('humidity');\n  };\n  const handleWindClick = () => {\n    setValue(windValue);\n    setActiveTab('wind');\n  };\n  useEffect(() => {\n    if (currentWeather && currentWeather.list.length > 0) {\n      // Set values based on currentWeather data\n      humidityValue = currentWeather.list[0].main.humidity + \" %\";\n      windValue = currentWeather.list[0].wind.speed * 10 + \" km/h\";\n      temperatureValue = Math.round(currentWeather.list[0].main.temp - 273.15) + \" °C\";\n      setValue(temperatureValue);\n    }\n  }, [currentWeather]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: currentWeather && new Date(currentWeather.list[0].dt * 1000).toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"condition\",\n        style: {\n          textTransform: 'capitalize'\n        },\n        children: currentWeather && currentWeather.list[0].weather.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"icon-condition\",\n        src: currentWeather && getWeatherIcon(currentWeather.list[0].weather.main)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-temperature\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"properties\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `temperature ${activeTab === 'temperature' ? 'active' : ''}`,\n        onClick: handleTemperatureClick,\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `humidity ${activeTab === 'humidity' ? 'active' : ''}`,\n        onClick: handleHumidityClick,\n        children: \"Humidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `wind ${activeTab === 'wind' ? 'active' : ''}`,\n        onClick: handleWindClick,\n        children: \"Wind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"Q9DxAsG4j26Jd5s/iduNQ0H3IxM=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","cloudy","clear","rain","jsxDEV","_jsxDEV","WeatherForecast","currentWeather","cityName","_s","activeTab","setActiveTab","value","setValue","humidityValue","windValue","temperatureValue","getWeatherIcon","weatherMain","handleTemperatureClick","handleHumidityClick","handleWindClick","list","length","main","humidity","wind","speed","Math","round","temp","className","children","Date","dt","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","style","textTransform","weather","description","alt","src","id","onClick","_c","$RefreshReg$"],"sources":["/Users/lesliesaliba/Desktop/weather_11_11/weatherr123/src/WeatherForecast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cloudy from './weather-icons/cloudy.svg';\nimport clear from './weather-icons/clear.svg';\nimport rain from './weather-icons/rain.svg';\n\nconst WeatherForecast = ({ currentWeather, cityName }) => {\n  const [activeTab, setActiveTab] = useState('temperature');\n  const [value, setValue] = useState('');\n\n  // Initialize variables for humidity, wind, and temperature\n  let humidityValue = \"\";\n  let windValue = \"\";\n  let temperatureValue = \"\";\n\n  const getWeatherIcon = (weatherMain) => {\n    switch (weatherMain) {\n      case 'Clouds':\n        return cloudy;\n      case 'Clear':\n        return clear;\n      case 'Rain':\n        return rain;\n      default:\n        return cloudy;\n    }\n  };\n\n  const handleTemperatureClick = () => {\n    setValue(temperatureValue);\n    setActiveTab('temperature');\n  };\n\n  const handleHumidityClick = () => {\n    setValue(humidityValue);\n    setActiveTab('humidity');\n  };\n\n  const handleWindClick = () => {\n    setValue(windValue);\n    setActiveTab('wind');\n  };\n\n  useEffect(() => {\n    if (currentWeather && currentWeather.list.length > 0) {\n      // Set values based on currentWeather data\n      humidityValue = currentWeather.list[0].main.humidity + \" %\";\n      windValue = (currentWeather.list[0].wind.speed * 10) + \" km/h\";\n      temperatureValue = Math.round(currentWeather.list[0].main.temp - 273.15) + \" °C\";\n      setValue(temperatureValue);\n    }\n  }, [currentWeather]);\n\n  return (\n    <div className=\"forecast-details\">\n      <p><span className=\"date\">{currentWeather && new Date(currentWeather.list[0].dt * 1000).toDateString()}</span></p>\n      <div className=\"current-weather\">\n        <p className=\"condition\" style={{ textTransform: 'capitalize' }}>{currentWeather && currentWeather.list[0].weather.description}</p>\n        <img alt=\"icon-condition\" src={currentWeather && getWeatherIcon(currentWeather.list[0].weather.main)} />\n        <p className=\"current-temperature\">{value}</p>\n      </div>\n      <div id=\"properties\">\n        <span className={`temperature ${activeTab === 'temperature' ? 'active' : ''}`} onClick={handleTemperatureClick}>Temperature</span>\n        <span className={`humidity ${activeTab === 'humidity' ? 'active' : ''}`} onClick={handleHumidityClick}>Humidity</span>\n        <span className={`wind ${activeTab === 'wind' ? 'active' : ''}`} onClick={handleWindClick}>Wind</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherForecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,IAAI,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,eAAe,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,aAAa,CAAC;EACzD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,IAAIe,aAAa,GAAG,EAAE;EACtB,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,gBAAgB,GAAG,EAAE;EAEzB,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtC,QAAQA,WAAW;MACjB,KAAK,QAAQ;QACX,OAAOjB,MAAM;MACf,KAAK,OAAO;QACV,OAAOC,KAAK;MACd,KAAK,MAAM;QACT,OAAOC,IAAI;MACb;QACE,OAAOF,MAAM;IACjB;EACF,CAAC;EAED,MAAMkB,sBAAsB,GAAGA,CAAA,KAAM;IACnCN,QAAQ,CAACG,gBAAgB,CAAC;IAC1BL,YAAY,CAAC,aAAa,CAAC;EAC7B,CAAC;EAED,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChCP,QAAQ,CAACC,aAAa,CAAC;IACvBH,YAAY,CAAC,UAAU,CAAC;EAC1B,CAAC;EAED,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5BR,QAAQ,CAACE,SAAS,CAAC;IACnBJ,YAAY,CAAC,MAAM,CAAC;EACtB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAIO,cAAc,IAAIA,cAAc,CAACe,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACpD;MACAT,aAAa,GAAGP,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,GAAG,IAAI;MAC3DV,SAAS,GAAIR,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC,CAACI,IAAI,CAACC,KAAK,GAAG,EAAE,GAAI,OAAO;MAC9DX,gBAAgB,GAAGY,IAAI,CAACC,KAAK,CAACtB,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC,CAACE,IAAI,CAACM,IAAI,GAAG,MAAM,CAAC,GAAG,KAAK;MAChFjB,QAAQ,CAACG,gBAAgB,CAAC;IAC5B;EACF,CAAC,EAAE,CAACT,cAAc,CAAC,CAAC;EAEpB,oBACEF,OAAA;IAAK0B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B3B,OAAA;MAAA2B,QAAA,eAAG3B,OAAA;QAAM0B,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEzB,cAAc,IAAI,IAAI0B,IAAI,CAAC1B,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC,CAACY,EAAE,GAAG,IAAI,CAAC,CAACC,YAAY,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClHlC,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B3B,OAAA;QAAG0B,SAAS,EAAC,WAAW;QAACS,KAAK,EAAE;UAAEC,aAAa,EAAE;QAAa,CAAE;QAAAT,QAAA,EAAEzB,cAAc,IAAIA,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC,CAACoB,OAAO,CAACC;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnIlC,OAAA;QAAKuC,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAEtC,cAAc,IAAIU,cAAc,CAACV,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC,CAACoB,OAAO,CAAClB,IAAI;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxGlC,OAAA;QAAG0B,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEpB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNlC,OAAA;MAAKyC,EAAE,EAAC,YAAY;MAAAd,QAAA,gBAClB3B,OAAA;QAAM0B,SAAS,EAAG,eAAcrB,SAAS,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAG,EAAE;QAACqC,OAAO,EAAE5B,sBAAuB;QAAAa,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClIlC,OAAA;QAAM0B,SAAS,EAAG,YAAWrB,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAG,EAAE;QAACqC,OAAO,EAAE3B,mBAAoB;QAAAY,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtHlC,OAAA;QAAM0B,SAAS,EAAG,QAAOrB,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAG,EAAE;QAACqC,OAAO,EAAE1B,eAAgB;QAAAW,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA9DIH,eAAe;AAAA0C,EAAA,GAAf1C,eAAe;AAgErB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}