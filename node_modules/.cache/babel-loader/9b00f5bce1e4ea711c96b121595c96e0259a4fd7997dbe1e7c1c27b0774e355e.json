{"ast":null,"code":"var _jsxFileName = \"/Users/lesliesaliba/Desktop/weather_11_11/weatherr123/src/WeatherForecast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport cloudy from './weather-icons/cloudy.svg';\nimport clear from './weather-icons/clear.svg';\nimport rain from './weather-icons/rain.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = ({\n  currentWeather\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('temperature');\n  const [value, setValue] = useState('');\n  const getWeatherIcon = weatherMain => {\n    switch (weatherMain) {\n      case 'Clouds':\n        return cloudy;\n      case 'Clear':\n        return clear;\n      case 'Rain':\n        return rain;\n      default:\n        return cloudy;\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n    switch (tab) {\n      case 'temperature':\n        setValue(temperatureValue);\n        break;\n      case 'humidity':\n        setValue(humidityValue);\n        break;\n      case 'wind':\n        setValue(windValue);\n        break;\n      default:\n        break;\n    }\n  };\n  let humidityValue = \"\";\n  let windValue = \"\";\n  let temperatureValue = \"\";\n  useEffect(() => {\n    if (currentWeather && currentWeather.list.length > 0) {\n      humidityValue = currentWeather.list[0].main.humidity + \" %\";\n      windValue = currentWeather.list[0].wind.speed * 10 + \" km/h\";\n      temperatureValue = Math.round(currentWeather.list[0].main.temp - 273.15) + \" °C\";\n      if (activeTab === 'temperature') {\n        setValue(temperatureValue);\n      } else if (activeTab === 'humidity') {\n        setValue(humidityValue);\n      } else if (activeTab === 'wind') {\n        setValue(windValue);\n      }\n    }\n  }, [currentWeather, activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: currentWeather && new Date(currentWeather.list[0].dt * 1000).toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"condition\",\n        children: currentWeather && currentWeather.list[0].weather.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"icon-condition\",\n        src: currentWeather && getWeatherIcon(currentWeather.list[0].weather.main)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-temperature\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"properties\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `temperature ${activeTab === 'temperature' ? 'active' : ''}`,\n        onClick: () => handleTabClick('temperature'),\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `humidity ${activeTab === 'humidity' ? 'active' : ''}`,\n        onClick: () => handleTabClick('humidity'),\n        children: \"Humidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `wind ${activeTab === 'wind' ? 'active' : ''}`,\n        onClick: () => handleTabClick('wind'),\n        children: \"Wind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"Q9DxAsG4j26Jd5s/iduNQ0H3IxM=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","cloudy","clear","rain","jsxDEV","_jsxDEV","WeatherForecast","currentWeather","_s","activeTab","setActiveTab","value","setValue","getWeatherIcon","weatherMain","handleTabClick","tab","temperatureValue","humidityValue","windValue","list","length","main","humidity","wind","speed","Math","round","temp","className","children","Date","dt","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","weather","alt","src","id","onClick","_c","$RefreshReg$"],"sources":["/Users/lesliesaliba/Desktop/weather_11_11/weatherr123/src/WeatherForecast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cloudy from './weather-icons/cloudy.svg';\nimport clear from './weather-icons/clear.svg';\nimport rain from './weather-icons/rain.svg';\n\nconst WeatherForecast = ({ currentWeather }) => {\n  const [activeTab, setActiveTab] = useState('temperature');\n  const [value, setValue] = useState('');\n\n  const getWeatherIcon = (weatherMain) => {\n    switch (weatherMain) {\n      case 'Clouds':\n        return cloudy;\n      case 'Clear':\n        return clear;\n      case 'Rain':\n        return rain;\n      default:\n        return cloudy;\n    }\n  };\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n    switch (tab) {\n      case 'temperature':\n        setValue(temperatureValue);\n        break;\n      case 'humidity':\n        setValue(humidityValue);\n        break;\n      case 'wind':\n        setValue(windValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  let humidityValue = \"\";\n  let windValue = \"\";\n  let temperatureValue = \"\";\n\n  useEffect(() => {\n    if (currentWeather && currentWeather.list.length > 0) {\n      humidityValue = currentWeather.list[0].main.humidity + \" %\";\n      windValue = (currentWeather.list[0].wind.speed * 10) + \" km/h\";\n      temperatureValue = Math.round(currentWeather.list[0].main.temp - 273.15) + \" °C\";\n      if (activeTab === 'temperature') {\n        setValue(temperatureValue);\n      } else if (activeTab === 'humidity') {\n        setValue(humidityValue);\n      } else if (activeTab === 'wind') {\n        setValue(windValue);\n      }\n    }\n  }, [currentWeather, activeTab]);\n\n  return (\n    <div className=\"forecast-details\">\n      <p><span className=\"date\">{currentWeather && new Date(currentWeather.list[0].dt * 1000).toDateString()}</span></p>\n      <div className=\"current-weather\">\n        <p className=\"condition\">{currentWeather && currentWeather.list[0].weather.main}</p>\n        <img alt=\"icon-condition\" src={currentWeather && getWeatherIcon(currentWeather.list[0].weather.main)} />\n        <p className=\"current-temperature\">{value}</p>\n      </div>\n      <div id=\"properties\">\n        <span className={`temperature ${activeTab === 'temperature' ? 'active' : ''}`} onClick={() => handleTabClick('temperature')}>Temperature</span>\n        <span className={`humidity ${activeTab === 'humidity' ? 'active' : ''}`} onClick={() => handleTabClick('humidity')}>Humidity</span>\n        <span className={`wind ${activeTab === 'wind' ? 'active' : ''}`} onClick={() => handleTabClick('wind')}>Wind</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherForecast;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}